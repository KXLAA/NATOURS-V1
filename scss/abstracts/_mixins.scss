$breakpoints: (
    xxs:  352px,
    xs:   480px,
    sm:   768px,
    md:   992px,
    lg:   1200px,
    xl:   1920px
) !default;

/// **** BREAKPOINTS **** ///
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @if $breakpoint == xl {
      @media (min-width: $value) { 
        @content; 
      }
    }
    @else {
      @media screen and (max-width: $value) {
        @content;
      }
    }
  }
}

// ===== Usage ===== //
//@include respond-to(xxs){}
//@include respond-to(xs){}
//@include respond-to(sm){}
//@include respond-to(md){}
//@include respond-to(lg){}
//@include respond-to(xl){}


/// **** LAYOUT CONTAINER **** ///
@mixin layout-container-fluid{
  margin: 0 2rem;
  max-width: 100%;
  padding: 0rem 1rem 0rem 1rem;

  @include respond-to(md){
    margin: 0 1rem;
    padding: 0rem 1rem 0rem 1rem;
  }
  @include respond-to(xs){
      margin: 0 .5rem;
      padding: 0rem .5rem 0rem .5rem;
  }  

}
// ===== Usage ===== //
//@include layout-container-fluid;


/// **** LAYOUT SPACING **** ///
@mixin layout-spacing{
  margin-bottom: 9.5rem;

  @include respond-to(sm){
    margin-bottom: 4rem
  }

  @include respond-to(xs){
    margin-bottom: 2rem;
  }
}

// ===== Usage ===== //
//@include layout-spacing;


/// **** FLEX-BOX TOOLKIT **** ///
@mixin flex($direction: row, $justify-content: space-between, $align-items: null, $wrap: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-wrap: $wrap;
}

// ===== Usage ===== //
//@include flex() -> for Default Values
//@include flex($align-items: center, $justify-content: center) -> for specifics
// -> HORIZONTAL [UP & DOWN] {justify} // -> VERTICAL [LEFT & RIGHT] {align} 

